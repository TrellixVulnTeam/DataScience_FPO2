<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (owid-co2-data)' inline='true' name='federated.12q0qge0lr3zmq15jtf350aeotj7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-co2-data' name='excel-direct.1rlx2ka1890mns1atkwj60ak9e3y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/zohaib/Desktop/JH DATA SCIENCE/605_662 - Data Visualization/Final Project/owid-co2-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1rlx2ka1890mns1atkwj60ak9e3y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BC10001:no:A1:BC10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='co2' ordinal='3' />
            <column datatype='real' name='co2_growth_prct' ordinal='4' />
            <column datatype='real' name='co2_growth_abs' ordinal='5' />
            <column datatype='real' name='consumption_co2' ordinal='6' />
            <column datatype='real' name='trade_co2' ordinal='7' />
            <column datatype='real' name='trade_co2_share' ordinal='8' />
            <column datatype='real' name='co2_per_capita' ordinal='9' />
            <column datatype='real' name='consumption_co2_per_capita' ordinal='10' />
            <column datatype='real' name='share_global_co2' ordinal='11' />
            <column datatype='real' name='cumulative_co2' ordinal='12' />
            <column datatype='real' name='share_global_cumulative_co2' ordinal='13' />
            <column datatype='real' name='co2_per_gdp' ordinal='14' />
            <column datatype='real' name='consumption_co2_per_gdp' ordinal='15' />
            <column datatype='real' name='co2_per_unit_energy' ordinal='16' />
            <column datatype='real' name='cement_co2' ordinal='17' />
            <column datatype='real' name='coal_co2' ordinal='18' />
            <column datatype='real' name='flaring_co2' ordinal='19' />
            <column datatype='real' name='gas_co2' ordinal='20' />
            <column datatype='real' name='oil_co2' ordinal='21' />
            <column datatype='real' name='other_industry_co2' ordinal='22' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='23' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='24' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='25' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='26' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='27' />
            <column datatype='real' name='other_co2_per_capita' ordinal='28' />
            <column datatype='real' name='share_global_coal_co2' ordinal='29' />
            <column datatype='real' name='share_global_oil_co2' ordinal='30' />
            <column datatype='real' name='share_global_gas_co2' ordinal='31' />
            <column datatype='real' name='share_global_flaring_co2' ordinal='32' />
            <column datatype='real' name='share_global_cement_co2' ordinal='33' />
            <column datatype='real' name='cumulative_coal_co2' ordinal='34' />
            <column datatype='real' name='cumulative_oil_co2' ordinal='35' />
            <column datatype='real' name='cumulative_gas_co2' ordinal='36' />
            <column datatype='real' name='cumulative_flaring_co2' ordinal='37' />
            <column datatype='real' name='cumulative_cement_co2' ordinal='38' />
            <column datatype='real' name='share_global_cumulative_coal_co2' ordinal='39' />
            <column datatype='real' name='share_global_cumulative_oil_co2' ordinal='40' />
            <column datatype='real' name='share_global_cumulative_gas_co2' ordinal='41' />
            <column datatype='real' name='share_global_cumulative_flaring_co2' ordinal='42' />
            <column datatype='real' name='share_global_cumulative_cement_co2' ordinal='43' />
            <column datatype='real' name='total_ghg' ordinal='44' />
            <column datatype='real' name='ghg_per_capita' ordinal='45' />
            <column datatype='real' name='methane' ordinal='46' />
            <column datatype='real' name='methane_per_capita' ordinal='47' />
            <column datatype='real' name='nitrous_oxide' ordinal='48' />
            <column datatype='real' name='nitrous_oxide_per_capita' ordinal='49' />
            <column datatype='real' name='primary_energy_consumption' ordinal='50' />
            <column datatype='real' name='energy_per_capita' ordinal='51' />
            <column datatype='real' name='energy_per_gdp' ordinal='52' />
            <column datatype='integer' name='population' ordinal='53' />
            <column datatype='integer' name='gdp' ordinal='54' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1rlx2ka1890mns1atkwj60ak9e3y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BC10001:no:A1:BC10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='co2' ordinal='3' />
            <column datatype='real' name='co2_growth_prct' ordinal='4' />
            <column datatype='real' name='co2_growth_abs' ordinal='5' />
            <column datatype='real' name='consumption_co2' ordinal='6' />
            <column datatype='real' name='trade_co2' ordinal='7' />
            <column datatype='real' name='trade_co2_share' ordinal='8' />
            <column datatype='real' name='co2_per_capita' ordinal='9' />
            <column datatype='real' name='consumption_co2_per_capita' ordinal='10' />
            <column datatype='real' name='share_global_co2' ordinal='11' />
            <column datatype='real' name='cumulative_co2' ordinal='12' />
            <column datatype='real' name='share_global_cumulative_co2' ordinal='13' />
            <column datatype='real' name='co2_per_gdp' ordinal='14' />
            <column datatype='real' name='consumption_co2_per_gdp' ordinal='15' />
            <column datatype='real' name='co2_per_unit_energy' ordinal='16' />
            <column datatype='real' name='cement_co2' ordinal='17' />
            <column datatype='real' name='coal_co2' ordinal='18' />
            <column datatype='real' name='flaring_co2' ordinal='19' />
            <column datatype='real' name='gas_co2' ordinal='20' />
            <column datatype='real' name='oil_co2' ordinal='21' />
            <column datatype='real' name='other_industry_co2' ordinal='22' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='23' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='24' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='25' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='26' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='27' />
            <column datatype='real' name='other_co2_per_capita' ordinal='28' />
            <column datatype='real' name='share_global_coal_co2' ordinal='29' />
            <column datatype='real' name='share_global_oil_co2' ordinal='30' />
            <column datatype='real' name='share_global_gas_co2' ordinal='31' />
            <column datatype='real' name='share_global_flaring_co2' ordinal='32' />
            <column datatype='real' name='share_global_cement_co2' ordinal='33' />
            <column datatype='real' name='cumulative_coal_co2' ordinal='34' />
            <column datatype='real' name='cumulative_oil_co2' ordinal='35' />
            <column datatype='real' name='cumulative_gas_co2' ordinal='36' />
            <column datatype='real' name='cumulative_flaring_co2' ordinal='37' />
            <column datatype='real' name='cumulative_cement_co2' ordinal='38' />
            <column datatype='real' name='share_global_cumulative_coal_co2' ordinal='39' />
            <column datatype='real' name='share_global_cumulative_oil_co2' ordinal='40' />
            <column datatype='real' name='share_global_cumulative_gas_co2' ordinal='41' />
            <column datatype='real' name='share_global_cumulative_flaring_co2' ordinal='42' />
            <column datatype='real' name='share_global_cumulative_cement_co2' ordinal='43' />
            <column datatype='real' name='total_ghg' ordinal='44' />
            <column datatype='real' name='ghg_per_capita' ordinal='45' />
            <column datatype='real' name='methane' ordinal='46' />
            <column datatype='real' name='methane_per_capita' ordinal='47' />
            <column datatype='real' name='nitrous_oxide' ordinal='48' />
            <column datatype='real' name='nitrous_oxide_per_capita' ordinal='49' />
            <column datatype='real' name='primary_energy_consumption' ordinal='50' />
            <column datatype='real' name='energy_per_capita' ordinal='51' />
            <column datatype='real' name='energy_per_gdp' ordinal='52' />
            <column datatype='integer' name='population' ordinal='53' />
            <column datatype='integer' name='gdp' ordinal='54' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BC10001:no:A1:BC10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_abs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_abs]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_growth_abs</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>consumption_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>trade_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>consumption_co2_per_capita</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cumulative_co2</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_gdp]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_per_gdp</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption_co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption_co2_per_gdp]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>consumption_co2_per_gdp</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_unit_energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_unit_energy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_per_unit_energy</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_coal_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_coal_co2</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_oil_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_oil_co2</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_gas_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_gas_co2</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_flaring_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_flaring_co2</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cement_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cement_co2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_coal_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_coal_co2</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_oil_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_oil_co2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_gas_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_gas_co2</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_flaring_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_flaring_co2</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_cement_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_cement_co2</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_coal_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cumulative_coal_co2</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_oil_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cumulative_oil_co2</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_gas_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cumulative_gas_co2</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_flaring_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cumulative_flaring_co2</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_cement_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>share_global_cumulative_cement_co2</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_ghg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_ghg]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_ghg</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ghg_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ghg_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ghg_per_capita</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>methane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[methane]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>methane</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>methane_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[methane_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>methane_per_capita</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nitrous_oxide</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nitrous_oxide]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>nitrous_oxide</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nitrous_oxide_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nitrous_oxide_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>nitrous_oxide_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[primary_energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>primary_energy_consumption</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>energy_per_capita</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_per_gdp]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>energy_per_gdp</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gdp]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4424D40805824C088ECBF1796445C67A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4424D40805824C088ECBF1796445C67A]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Abs' datatype='real' name='[co2_growth_abs]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 Per Gdp' datatype='real' name='[co2_per_gdp]' role='measure' type='quantitative' />
      <column caption='Co2 Per Unit Energy' datatype='real' name='[co2_per_unit_energy]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Consumption Co2' datatype='real' name='[consumption_co2]' role='measure' type='quantitative' />
      <column caption='Consumption Co2 Per Capita' datatype='real' name='[consumption_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Consumption Co2 Per Gdp' datatype='real' name='[consumption_co2_per_gdp]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Cement Co2' datatype='real' name='[cumulative_cement_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Coal Co2' datatype='real' name='[cumulative_coal_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Flaring Co2' datatype='real' name='[cumulative_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Gas Co2' datatype='real' name='[cumulative_gas_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Oil Co2' datatype='real' name='[cumulative_oil_co2]' role='measure' type='quantitative' />
      <column caption='Energy Per Capita' datatype='real' name='[energy_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy Per Gdp' datatype='real' name='[energy_per_gdp]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gdp' datatype='integer' name='[gdp]' role='measure' type='quantitative' />
      <column caption='Ghg Per Capita' datatype='real' name='[ghg_per_capita]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Methane' datatype='real' name='[methane]' role='measure' type='quantitative' />
      <column caption='Methane Per Capita' datatype='real' name='[methane_per_capita]' role='measure' type='quantitative' />
      <column caption='Nitrous Oxide' datatype='real' name='[nitrous_oxide]' role='measure' type='quantitative' />
      <column caption='Nitrous Oxide Per Capita' datatype='real' name='[nitrous_oxide_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Primary Energy Consumption' datatype='real' name='[primary_energy_consumption]' role='measure' type='quantitative' />
      <column caption='Share Global Cement Co2' datatype='real' name='[share_global_cement_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Co2' datatype='real' name='[share_global_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Coal Co2' datatype='real' name='[share_global_coal_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Cement Co2' datatype='real' name='[share_global_cumulative_cement_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Co2' datatype='real' name='[share_global_cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Coal Co2' datatype='real' name='[share_global_cumulative_coal_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Flaring Co2' datatype='real' name='[share_global_cumulative_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Gas Co2' datatype='real' name='[share_global_cumulative_gas_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Oil Co2' datatype='real' name='[share_global_cumulative_oil_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Flaring Co2' datatype='real' name='[share_global_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Gas Co2' datatype='real' name='[share_global_gas_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Oil Co2' datatype='real' name='[share_global_oil_co2]' role='measure' type='quantitative' />
      <column caption='Total Ghg' datatype='real' name='[total_ghg]' role='measure' type='quantitative' />
      <column caption='Trade Co2' datatype='real' name='[trade_co2]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;International transport&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Niue&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Palau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4424D40805824C088ECBF1796445C67A'>
            <properties context=''>
              <relation connection='excel-direct.1rlx2ka1890mns1atkwj60ak9e3y' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:BC10001:no:A1:BC10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='integer' name='year' ordinal='2' />
                  <column datatype='real' name='co2' ordinal='3' />
                  <column datatype='real' name='co2_growth_prct' ordinal='4' />
                  <column datatype='real' name='co2_growth_abs' ordinal='5' />
                  <column datatype='real' name='consumption_co2' ordinal='6' />
                  <column datatype='real' name='trade_co2' ordinal='7' />
                  <column datatype='real' name='trade_co2_share' ordinal='8' />
                  <column datatype='real' name='co2_per_capita' ordinal='9' />
                  <column datatype='real' name='consumption_co2_per_capita' ordinal='10' />
                  <column datatype='real' name='share_global_co2' ordinal='11' />
                  <column datatype='real' name='cumulative_co2' ordinal='12' />
                  <column datatype='real' name='share_global_cumulative_co2' ordinal='13' />
                  <column datatype='real' name='co2_per_gdp' ordinal='14' />
                  <column datatype='real' name='consumption_co2_per_gdp' ordinal='15' />
                  <column datatype='real' name='co2_per_unit_energy' ordinal='16' />
                  <column datatype='real' name='cement_co2' ordinal='17' />
                  <column datatype='real' name='coal_co2' ordinal='18' />
                  <column datatype='real' name='flaring_co2' ordinal='19' />
                  <column datatype='real' name='gas_co2' ordinal='20' />
                  <column datatype='real' name='oil_co2' ordinal='21' />
                  <column datatype='real' name='other_industry_co2' ordinal='22' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='23' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='24' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='25' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='26' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='27' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='28' />
                  <column datatype='real' name='share_global_coal_co2' ordinal='29' />
                  <column datatype='real' name='share_global_oil_co2' ordinal='30' />
                  <column datatype='real' name='share_global_gas_co2' ordinal='31' />
                  <column datatype='real' name='share_global_flaring_co2' ordinal='32' />
                  <column datatype='real' name='share_global_cement_co2' ordinal='33' />
                  <column datatype='real' name='cumulative_coal_co2' ordinal='34' />
                  <column datatype='real' name='cumulative_oil_co2' ordinal='35' />
                  <column datatype='real' name='cumulative_gas_co2' ordinal='36' />
                  <column datatype='real' name='cumulative_flaring_co2' ordinal='37' />
                  <column datatype='real' name='cumulative_cement_co2' ordinal='38' />
                  <column datatype='real' name='share_global_cumulative_coal_co2' ordinal='39' />
                  <column datatype='real' name='share_global_cumulative_oil_co2' ordinal='40' />
                  <column datatype='real' name='share_global_cumulative_gas_co2' ordinal='41' />
                  <column datatype='real' name='share_global_cumulative_flaring_co2' ordinal='42' />
                  <column datatype='real' name='share_global_cumulative_cement_co2' ordinal='43' />
                  <column datatype='real' name='total_ghg' ordinal='44' />
                  <column datatype='real' name='ghg_per_capita' ordinal='45' />
                  <column datatype='real' name='methane' ordinal='46' />
                  <column datatype='real' name='methane_per_capita' ordinal='47' />
                  <column datatype='real' name='nitrous_oxide' ordinal='48' />
                  <column datatype='real' name='nitrous_oxide_per_capita' ordinal='49' />
                  <column datatype='real' name='primary_energy_consumption' ordinal='50' />
                  <column datatype='real' name='energy_per_capita' ordinal='51' />
                  <column datatype='real' name='energy_per_gdp' ordinal='52' />
                  <column datatype='integer' name='population' ordinal='53' />
                  <column datatype='integer' name='gdp' ordinal='54' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.12q0qge0lr3zmq15jtf350aeotj7'>
      <datasources>
        <datasource caption='Sheet1 (owid-co2-data)' name='federated.12q0qge0lr3zmq15jtf350aeotj7' />
      </datasources>
      <datasource-dependencies datasource='federated.12q0qge0lr3zmq15jtf350aeotj7'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]' included-values='in-range'>
        <min>1965</min>
        <max>2019</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name=' Yr vs CO2 Consump'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-co2-data)' name='federated.12q0qge0lr3zmq15jtf350aeotj7' />
          </datasources>
          <datasource-dependencies datasource='federated.12q0qge0lr3zmq15jtf350aeotj7'>
            <column caption='Consumption Co2' datatype='real' name='[consumption_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[consumption_co2]' derivation='Sum' name='[sum:consumption_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</column>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]' />
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12q0qge0lr3zmq15jtf350aeotj7].[sum:consumption_co2:qk]</rows>
        <cols>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{81E0DAE2-0803-44E6-97E8-0654F9486999}' />
    </worksheet>
    <worksheet name='Yr vs CO2 Consump per Capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-co2-data)' name='federated.12q0qge0lr3zmq15jtf350aeotj7' />
          </datasources>
          <datasource-dependencies datasource='federated.12q0qge0lr3zmq15jtf350aeotj7'>
            <column caption='Consumption Co2 Per Capita' datatype='real' name='[consumption_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[consumption_co2_per_capita]' derivation='Sum' name='[sum:consumption_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</column>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]' />
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12q0qge0lr3zmq15jtf350aeotj7].[sum:consumption_co2_per_capita:qk]</rows>
        <cols>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{45D1A7D2-6DE7-4AF4-9EB3-6055174E9F6A}' />
    </worksheet>
    <worksheet name='Yr vs CO2 Consump per GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-co2-data)' name='federated.12q0qge0lr3zmq15jtf350aeotj7' />
          </datasources>
          <datasource-dependencies datasource='federated.12q0qge0lr3zmq15jtf350aeotj7'>
            <column caption='Consumption Co2 Per Gdp' datatype='real' name='[consumption_co2_per_gdp]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[consumption_co2_per_gdp]' derivation='Sum' name='[sum:consumption_co2_per_gdp:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</column>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]' />
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12q0qge0lr3zmq15jtf350aeotj7].[sum:consumption_co2_per_gdp:qk]</rows>
        <cols>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{B1ED708C-C350-4C4B-A3D7-6E6786AAC719}' />
    </worksheet>
    <worksheet name='Yr vs Share Global'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-co2-data)' name='federated.12q0qge0lr3zmq15jtf350aeotj7' />
          </datasources>
          <datasource-dependencies datasource='federated.12q0qge0lr3zmq15jtf350aeotj7'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Share Global Co2' datatype='real' name='[share_global_co2]' role='measure' type='quantitative' />
            <column-instance column='[share_global_co2]' derivation='Sum' name='[sum:share_global_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</column>
            <column>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12q0qge0lr3zmq15jtf350aeotj7].[sum:share_global_co2:qk]</rows>
        <cols>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{DFF50DDF-E083-4DD4-951F-5DCCD07A42BC}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name=' Yr vs CO2 Consump'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]&#10;[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D051E85-1AFD-4DAD-849D-66DBC36D87CA}' />
    </window>
    <window class='worksheet' name='Yr vs CO2 Consump per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]&#10;[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AAF7074-A636-4383-BD1B-5ED4964737D0}' />
    </window>
    <window class='worksheet' name='Yr vs CO2 Consump per GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]&#10;[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[:Measure Names]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CC2C7B3-755F-4536-AEA9-629C3C91CD25}' />
    </window>
    <window class='worksheet' name='Yr vs Share Global'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:country:nk]</field>
            <field>[federated.12q0qge0lr3zmq15jtf350aeotj7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F802A15-5F8D-4B78-82F3-B47BA3FE2FFC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name=' Yr vs CO2 Consump' width='384'>
      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
      Q+GOtQCAgvxLlChRosRfHne0AihRokSJEncOZQVQokSJEhsUZQVQokSJEhsUZQVQokSJEhsU
      ZQVQokSJEhsUZQVQokSJEhsUZQVQokSJEhsUZQVQokSJEhsUZQVQokSJEhsUZQVQokSJEhsU
      ZQVQokSJEhsUd98OBUugtSbLbv2+rrdDb29l7VLvvfPM7jW991JZ7zW9G/E727AtgNuxx4CU
      t+d23mt6b8e9LfUa2LbN7djC417TW36/t+Ye3BMtgNuxlZpS6ra8RKXee6us95rensW30fXe
      S8/sdum9FTo3bAugRIkSJTY67tiWkCVKlChR4s6ibAGUKFGixAZFWQGUKFGixAbFXd8JfDOI
      45jf/OY3VCoVnn32Wd5//32azSaWZfHcc8/xy1/+EiEE+/btw3VdPvzwQ4QQvP766wghrqn3
      5MmTvP322/zDP/wD7XabN998E6UUhw4d4uLFi5w/f540TTl8+DBvvPEGlmUxPj7OM888s2p5
      16r3tddeA+AXv/gFP/jBD9i5c+cN6z1//jyzs7OMjo7yzDPP8MYbb+C6Lo899hhTU1PX1Dk/
      P8+vfvUrnn32WbZv386RI0cAmJmZYXp6mvfff58kSXj55Zf58MMPSZIEpRQvv/zyqmU9ceIE
      Z8+epdVq8dOf/pQPP/yQTqfD9PQ0jzzyCP/1X/8FwEsvvcQXX3zB3NwcIyMjHDp06JbpPX78
      OO12myRJeP3112+Z3mq1yu9//3uiKOL555+/pk6l1NB7s3fvXt566y0AXn/9dY4fP1787oMH
      D675ma1H78MPP8xvf/tbLMvi8ccfZ2Zm5ob1nj17tnj/4jhedk9u9N72vu3ePVjrd/a73/2u
      eL6vvfYa//mf/4nWmqeffhrXdYv3eseOHcDav7P16D169CjdbpeZmRn27t17TZ1zc3O89957
      KKV49NFHieOYU6dO4bouP/nJT/j973/PhQsX+NnPfsZnn33Gt99+S7fb5fDhw3iet2p5Aayf
      //znP7/uWfcokiRhx44dfPXVV+zatYtPP/2Ul19+mdOnTyOlpFarcfDgQd577z1mZ2f56U9/
      ShRFKKVWfTGFEHS7XXbt2sVnn33Gww8/zOOPP87Ro0dZXFzklVdeodlsYts23/ve99i5cyef
      fPIJDz300KrlXY/eL7/8Es/z8DyPTZs23bDerVu38oMf/IA//elPKKWYnJzkoYceYnJyclWd
      cRxTr9cB8DyPubk5XnzxRf74xz9y5coVXnrpJXbs2MHHH39Mo9HghRde4M9//jN79uxZVW+9
      Xuehhx6i2WwSBAHffPMNhw8f5uOPP6bT6fDII4+wb98+/vCHP9BoNHj11Vf57LPP2L179y3T
      e+DAAR588EE+//zzVT/O9eqtVqvMzs4SRRG7du1aVe+uXbuK9+bKlSu8+OKLjI+P880333Dx
      4sXid6/nma1Hr+d51Ot17r//fi5cuLBqBXA9vVu2bCnev+PHjw/dkwceeOCG7u39998/9G0P
      Xv9639nWrVuL51upVBgdHeXgwYMcO3aMHTt2FO/1+Pg4H3/88Zq/s7XqHR0d5eTJkzz55JNs
      3759VWPTcRz27t3L5OQkZ86cKXjq66+/ZsuWLdTrdebn59m1axeffPIJ+/fvp9FoMD4+vqY9
      17/TLiDf96lUKkW6Vqvx61//mq+++orx8XG+/PJL3nrrraJVIISgVqvRbrdX1Ts+Pl7Iu3fv
      5tixY7zzzjuEYciWLVs4cuQIJ0+epNvtMjc3x3/8x3/wox/96LrlXaveK1euMDs7y8zMDEqp
      m9LbaDR48803OXv2LAsLC5w9e5bjx4/zwQcfrKqzXq8X45uDIKDZbPLWW29x6dIlHn30Ud54
      4w0++OADut0ulUqF3/zmN2sazmvbNm+99Ra2bbN582Zc1wXMMMJ2u02tViMIAuI4LvStZaz5
      evRmWca///u/88QTT9zS8v7ud7/j6aefRim1anmFEEPvTZqmeJ5XvJuDv3s9z2w9eicmJjhx
      4gR/+MMf2LJly03pHXz/lt6TG723g9/20utfD4PPt1ceKSVCiKH3ut1ur+s7W6veVqvF+fPn
      OX36dNEauhYcx+FPf/oTH374IQcPHiyGfVarVTqdztC9nZ6e5t133+Xy5ctrIn/4jlcAS7F/
      /35eeuklpqamGBsb4/XXX2f//v1MTk4ihKDdbnP27NlVm9FLUalU+Ju/+RseeeQRpqen2bdv
      H6+88grj4+NMTU3x9ttv87Of/YzR0dF1lXU1vbVajZGRET755BP+/Oc/35Te73//+7zwwgvM
      zMywbds2Nm/ezIEDB2g0GmvWKYTg1Vdf5dlnn2VqaopNmzbx13/912zbto377ruPVqvF4cOH
      1zRz8dixY+zcuZOnnnqqIFGlFFEUsXXrVs6cOcO5c+eYmJggDEO01nS73VWtqPXqPXLkCD/5
      yU+47777rvvb16q3Wq0yOTnJ+++/z9mzZ1c1MrIsG3pv6vU6ly5d4syZM2zZsmXod6/nma1H
      7+eff86LL77I4cOH+fzzz29K7yCW3usbvberXf96GHy+09PTfPXVVywuLi4zULrd7rq+s7Xq
      rdVqTE5O8tRTT113ktjFixeZnZ3l1VdfRUpJmqakacqlS5eo1WpD5545c4bXXnuNffv28c03
      31y3vPAdHwY6NzfHp59+ShRFPPDAA6Rpyrlz59i7dy/bt2/nzTffRAjBoUOH0FrzzjvvsHnz
      Zh5//PFV9f7xj39kbm4Oz/N48sknOXbsGL7vc+jQIb7++mtOnjxZNFHfeecdHMdhbGzsuhbl
      WvU++OCDADQaDZIkuW7TdDW9Z86c4fTp0zz55JNMTk7ywQcf0Gg0OHDgwKof06lTp/j6668B
      2LdvHydPnqTT6fDDH/6QNE15//33qdfr7N+/vzh3amqKRx99dNVlGOc3AAAB7ElEQVSy9vzQ
      AI8//jiNRoMvvviCJ554gk2bNnHs2DGSJOG5557j8uXL/M///A979uzh/vvvv2V6f/vb3xYV
      1QsvvLBq5bIevb2P/fTp06u6gMIwHHpvHnvsMd599108z+PAgQPMzs4O/e61PrP16N26dStH
      jx5FKcWBAweGWtLr1fvRRx8V798zzzxT9AkN3pP13lspZfFt79mzhxMnTqz5O3vnnXeGnu9H
      H33E/Pw8zz//PN98883Qez01NbXm72w9epvNJl999RV79uwp+hpWwrlz5/j888+xLIsHHniA
      yclJ3nvvPe677z52797N0aNHiaKIsbExdu3axUcffUQQBBw8ePC6RhF8xyuAEiVKlChxbWwo
      F1CJEiVKlOijrABKlChRYoOirABKlChRYoOirABKlChRYoOirABKlChRYoOirABKlChRYoOi
      rABKlLgJvPvuuxw5coQ0Tfnnf/7nO12cEiXWhXIeQIkSN4E0Tfmnf/onDh06xJYtW9i5cyf/
      +q//yvj4OP/4j//Iv/zLv9But/n7v/97jh49imVZ7Nmzh6eeeupOF71EibIFUKLEzcC2bf7u
      7/6OX//61zz//PP827/9G3v37uXUqVOcO3eOJ554At/3effddzlx4gQzMzMl+Ze4a/D/AfPH
      fXH4nqINAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Yr vs CO2 Consump per Capita' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Yr vs CO2 Consump per GDP' width='384'>
      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
      HbJAcBf/H1jwVGyig4QEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Yr vs Share Global' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
